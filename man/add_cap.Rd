% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_cap.R
\name{add_cap}
\alias{add_cap}
\title{Cap a Numeric Variable}
\usage{
add_cap(dataset, var_qt, cap_value, cap_color, type = "filter")
}
\arguments{
\item{dataset}{Data set for which to apply the cap to}

\item{var_qt}{Character; the variable of interest (in quotation marks) for which to apply the cap}

\item{cap_value}{Numeric; the value of the specified variable (\code{var_qt}) at and above to be capped}

\item{cap_color}{Character; the color which will be applied to values at or above \code{cap_value}}

\item{type}{Character choice: "filter" or "flag"; the former will replace values at or above \code{cap_value} with 'NA', while the latter will add a logical column ("above_cap") for if the respective row's value is at or above the \code{cap_value}.}
}
\value{
Series of visualization options to apply a discrete color cap to a continuous variable:
\describe{
\item{dataset}{Dataset with the values at or above the cap value either replaced with 'NA's or flagged (see \code{type} argument above).}
\item{lab_subtitle_cap}{Character value which will include information of the cap value and color.}
\item{cap_guide}{Guide (see \link[ggplot2]{guides}) containing fill and color arguments to allow the color cap to remain seprate in the legend.}
}
}
\description{
Apply a cap value of a specified color to numeric variables, either by replacing them with 'NA', or flagging them in a new column.
}
\examples{
example_cap_results <- add_cap(july_api_daily, "pm25_atm", cap_value = 15, cap_color = "red")
ggplot(july_api_daily, aes(date, pm25_atm)) +
  labs(subtitle = example_cap_results$lab_subtitle_cap)
remove(example_cap_results)
}
\seealso{
Other {visualization settings}: 
\code{\link{drop_incomplete}()},
\code{\link{settings_dt_scale}()},
\code{\link{settings_shapes}()},
\code{\link{settings_units}()}
}
\concept{{visualization settings}}
